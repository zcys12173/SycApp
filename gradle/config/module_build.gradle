def isModule = ext.find("isModule") == null?true:ext.isModule
if(isModule){
    apply plugin: 'com.android.library'
}else{
    apply plugin: 'com.android.application'
}

apply(pluginsAction)
android {
    compileSdkVersion build_versions['build_sdk']
    buildToolsVersion build_versions['build_tools_version']
    defaultConfig {
        if(!isModule){
            applicationId "${build_versions['applicationId']}.${project.name}"
        }
        minSdkVersion build_versions['min_sdk']
        targetSdkVersion build_versions['target_sdk']
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.activity_main.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility build_versions['sourceCompatibility']
        targetCompatibility build_versions['targetCompatibility']
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        dataBinding = true
    }

    sourceSets { main {
        if(isModule){
            java.srcDirs = ['src/main/java']
        }else{
            java.srcDirs = ['src/main/java', 'src/simple/java']
            manifest.srcFile 'src/simple/AndroidManifest.xml'
            res.srcDirs = ['src/main/res','src/simple/res']
        }

    } }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api deps['kotlin_stdlib_jdk7']
    api deps['kotlinx_coroutines']
    api deps['appcompat']
    api deps['core_ktx']
    api deps['constraintlayout']
    kapt deps['databinding_compiler']
    testImplementation deps['junit']
    androidTestImplementation deps['android_junit']
    androidTestImplementation deps['espresso_core']
}
